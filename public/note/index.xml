<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Personal Blog on Evan Matthews</title>
    <link>http://localhost:1313/note/</link>
    <description>Recent content in Personal Blog on Evan Matthews</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cool Python tidbits I enjoy using</title>
      <link>http://localhost:1313/note/cool-python-tidbits-i-enjoy-using/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/cool-python-tidbits-i-enjoy-using/</guid>
      <description>&lt;h1 id=&#34;semicolons&#34;&gt;Semicolons&lt;/h1&gt;&#xA;&lt;p&gt;Languages such as Java and C/C++ used a &lt;em&gt;terminator&lt;/em&gt; to indicate the end of a line of code- most often the &lt;em&gt;semicolon&lt;/em&gt; ( ; ). While this is not a mandatory feature for Python, you can still use semicolons as line separators. I personally use semicolons to make the most out of horizontal space in my code by combing initialization lines or similar expressions.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = 1&#xA;b = 3.14&#xA;c = &#39;statement&#39;&#xA;d = False&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;td&gt;&#xA;&lt;td&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = 1; b = 3.14 # numbers&#xA;c = &#39;statement&#39; # strings&#xA;d = False # bools&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ternary-operator&#34;&gt;Ternary Operator&lt;/h1&gt;&#xA;&lt;p&gt;Have you ever felt like some if-else cases appear to use too many lines?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Barbenheimer Review</title>
      <link>http://localhost:1313/note/barbenheimer-review/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/barbenheimer-review/</guid>
      <description>&lt;h1 id=&#34;barbenheimer&#34;&gt;Barbenheimer&lt;/h1&gt;&#xA;&lt;img src=&#34;banner.webp&#34; alt=&#34;Source: NBC News&#34;&gt;&#xA;&lt;p&gt;Last Friday, I had the pleasure of participating in the &lt;em&gt;Barbenheimer&lt;/em&gt; craze, watching Greta Gerwig&amp;rsquo;s &lt;em&gt;Barbie&lt;/em&gt; and Christopher Nolan&amp;rsquo;s &lt;em&gt;Oppenheimer&lt;/em&gt;. While I don&amp;rsquo;t visit the movie theater often, I found this double feature to be tons of fun, so I&amp;rsquo;ve decided to give my reviews of both movies in the order that I saw them.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;barbie&#34;&gt;Barbie&lt;/h2&gt;&#xA;&lt;p&gt;I went into &lt;em&gt;Barbie&lt;/em&gt; with the understanding that I was certainly not the movie&amp;rsquo;s target audience and that a lot of material wouldn&amp;rsquo;t land with me or any of the other males in the theater. To my surprise, most of the humor resonated well with the entire audience, and the messages it conveyed stuck incredibly well. Margot Robbie is obviously a fantastic choice for Barbie, and I also thought Ryan Gosling does a fantastic job as Ken. I felt his role within the plot is incredibly well developed and helped to openly talk about topics that plenty of people wouldn&amp;rsquo;t actively discuss. I won&amp;rsquo;t spoil what happens, but a good portion of the movie centers around the pressures put on women by society, and the portrayal of Ken and other male characters helps in discussing the patriarchy in a more comedic setting. Rich and realistic context aside, &lt;em&gt;Barbie&lt;/em&gt; is not afraid of being goofy and making fun of its own franchise. The movie takes full advantage of its PG-13 swear limit and roasts Mattel&amp;rsquo;s long history of discontinued Barbie dolls, adding to the sense that this is more than just a Mattel product advertisement. Overall, &lt;em&gt;Barbie&lt;/em&gt; is a phenomenal comedy, and &lt;strong&gt;I greatly recommend it&lt;/strong&gt; if you&amp;rsquo;re willing to stare at the color pink for two hours.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fourier Transform</title>
      <link>http://localhost:1313/note/fourier-transform/</link>
      <pubDate>Tue, 04 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/fourier-transform/</guid>
      <description>&lt;h1 id=&#34;fourier-transform&#34;&gt;Fourier Transform&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Fourier Transform&lt;/strong&gt; is a transformation of a time-series function which returns a respective frequency-series function, or an equivalent function who takes a frequency $f$ as an input rather than a time $t$&lt;/p&gt;&#xA;&lt;p&gt;$$\hat{f}(\xi) = \int_{-\infty}^{\infty} f(t) e^{-i2\pi\xi t} dt$$&lt;/p&gt;&#xA;&lt;p&gt;where $f(t)$ is the original function for our sound in terms of time $t$, and $\hat{f}(\xi)$ is an equivalent function in terms of frequency $\xi$. In essence, this function takes in a frequency and determines that frequency&amp;rsquo;s &lt;em&gt;intensity&lt;/em&gt; or usage in a sound across all time values $t$ in $f(t)$- hence why we&amp;rsquo;re integrating with respect to time. For example, if we have a sound and want to know if the frequency A4 = 440 Hz was used, we can compute $\hat{f}(440)$ to figure out whether or not there&amp;rsquo;s a &amp;ldquo;peak&amp;rdquo; for this frequency, (indicating that it is exists in our sound.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Amplitude</title>
      <link>http://localhost:1313/note/amplitude/</link>
      <pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/amplitude/</guid>
      <description>&lt;h1 id=&#34;amplitude&#34;&gt;Amplitude&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;strong&gt;amplitude&lt;/strong&gt; of a sound is physically defined as the amount of displacement produced by sound waves onto air particles. From the listener&amp;rsquo;s point of view, this variable represents the &amp;ldquo;volume&amp;rdquo; of the sound.&lt;/p&gt;&#xA;&lt;p&gt;$$S(t) = A\sin(\omega t + \phi)$$&lt;/p&gt;&#xA;&lt;p&gt;Given a sinusoidal function, we define $A$ to be our peak amplitude, or the highest volume that our sound reaches. That is, $\forall t \in \Reals, \space x(t) \in [-A, A] $, (for all inputs $t$, representing time in our sinusoidal function, $x(t)$ will always be between and include $-A$ and $A$).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Waveforms and Audio Basics</title>
      <link>http://localhost:1313/note/waveforms-and-audio-basics/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/waveforms-and-audio-basics/</guid>
      <description>&lt;!-- Py-Config header --&gt;&#xA;&lt;head&gt;&#xA;&lt;py-config hidden src=&#34;pyconfig.toml&#34;&gt;&#xA;[[fetch]]&#xA;files = [&#34;./audio1.py&#34;]&#xA;&lt;/py-config&gt;&#xA;&lt;/head&gt;&#xA;&lt;!-- Content --&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Understanding the mathematical logic behind sound- how certain factors effect what we hear and how we hear it- is the first step into audio signal processing. You should likely understand some basics about trigonometry and periodic functions to best understand the content. This article will run through basic vocabulary, explain how sound is processed and stored digitally, and demonstrate basic audio processing techniques in Python.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Made this Website</title>
      <link>http://localhost:1313/note/how-i-made-this-website/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/how-i-made-this-website/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;‚ö†Ô∏è This article assumes you have a decent understanding about console commands and Git.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;I have something rather important to get off my chest:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;I don&#39;t like web dev.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;There, I said it. I&#39;ve used plenty of tools in the past, including HTML, CSS and Javascript, yet the idea of making websites never truly stuck. To me, there was always an additional layer of complication that I could never get around. However, there are plenty of tools nowadays that get around the tedium of having to type an endless amount of style and formatting code to make a nice-looking website. This article will hopefully introduce you to a number of tools I&#39;ve been using to make this website and will hopefully stop you from having to touch &lt;i&gt;javascript&lt;/i&gt; ü§Æ or do any actual web programming.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
