<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Evan Matthews</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Home on Evan Matthews</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playing with 4o Image Generation</title>
      <link>http://localhost:1313/post/2025/04/04/playing-with-4o-image-generation/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2025/04/04/playing-with-4o-image-generation/</guid>
      <description>&lt;p&gt;OpenAI&amp;rsquo;s &lt;a href=&#34;https://openai.com/index/introducing-4o-image-generation/&#34;&gt;newest image generation model&lt;/a&gt; has radically change the landscape of AI-generated images, (&lt;em&gt;for better, or for worse&lt;/em&gt;).&#xA;Admittedly, I&amp;rsquo;ve acted like a &amp;ldquo;kid on Christmas morning&amp;rdquo; for the past two weeks messing around with this model, and I figured what better than to post my use cases and results.&lt;/p&gt;&#xA;&lt;p&gt;For the record: this isn&amp;rsquo;t to start some argument about AI art being slop or conflicting with copyright.&#xA;I&amp;rsquo;m of the opinion that, as much as Image generation trivializes the manual work of drawing/painting art, it&amp;rsquo;s by no means a replacement.&#xA;Making good art requires a level of creativity and artistic know-how, something that image generators don&amp;rsquo;t provide to the average person.&#xA;That is, while the average person can make something slightly better thanks to this new model, trained artists will always have the upper hand, being able to communicate in a language of artistic experience that helps fine-tune the generative process.&#xA;Call me optimistic, but we might even start to see more artists incorporating AI tools into their toolbox, such as to reduce time on tedious tasks or to make quick art drafts for clients.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSLSC 2025</title>
      <link>http://localhost:1313/post/2025/03/01/cslsc-2025/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2025/03/01/cslsc-2025/</guid>
      <description>&lt;h1 id=&#34;cslsc-2025&#34;&gt;CSLSC 2025&lt;/h1&gt;&#xA;&lt;p&gt;I&amp;rsquo;m proud to announce that &lt;a href=&#34;https://studentconference.csl.illinois.edu/&#34;&gt;CSLSC 2025&lt;/a&gt; was a resounding success! This year, I chaired for the Machine Learning and Signal Processing (MLSP) session alongside &lt;a href=&#34;https://hanlinmai.web.illinois.edu/&#34;&gt;Asher Mai&lt;/a&gt;. Guest speakers included Dr. &lt;a href=&#34;https://ycemsubakan.github.io/&#34;&gt;Cem Subakan&lt;/a&gt; from Universit√© Laval, and &lt;a href=&#34;https://ificl.github.io/&#34;&gt;Ziyang Chen&lt;/a&gt; from the University of Michigan.&#xA;We also had a handful of student presenters, of which included &lt;a href=&#34;https://hthieu.web.illinois.edu/&#34;&gt;Trung-Hieu Hoang&lt;/a&gt; who won &amp;ldquo;best MLSP student talk.&amp;rdquo; Thank you to everyone who presented and helped in the organization process for the conference, we couldn&amp;rsquo;t have done this without you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Life updates</title>
      <link>http://localhost:1313/post/2024/05/20/life-updates/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024/05/20/life-updates/</guid>
      <description>&lt;h1 id=&#34;life-updates&#34;&gt;Life updates&lt;/h1&gt;&#xA;&lt;p&gt;Wow, so I haven&amp;rsquo;t updated my blog in a while&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;My first year of grad school at UIUC has gone and went, and I&amp;rsquo;ve accomplished quite a bit since entering the MS CS program last fall.&lt;/p&gt;&#xA;&lt;p&gt;I wrote three research papers related to a variety of topics:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2403.19611&#34;&gt;&lt;em&gt;Nearest Neighbor Classication for Classical Image Upsampling&lt;/em&gt;&lt;/a&gt; with Nic Prate. We wrote this for a class on Machine Learning for Signal Processing in December 2023, and I was very excited to finally get a paper published (&lt;em&gt;and read by other researchers&lt;/em&gt;) on arXiv.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cool Python tidbits I enjoy using</title>
      <link>http://localhost:1313/note/cool-python-tidbits-i-enjoy-using/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/cool-python-tidbits-i-enjoy-using/</guid>
      <description>&lt;h1 id=&#34;semicolons&#34;&gt;Semicolons&lt;/h1&gt;&#xA;&lt;p&gt;Languages such as Java and C/C++ used a &lt;em&gt;terminator&lt;/em&gt; to indicate the end of a line of code- most often the &lt;em&gt;semicolon&lt;/em&gt; ( ; ). While this is not a mandatory feature for Python, you can still use semicolons as line separators. I personally use semicolons to make the most out of horizontal space in my code by combing initialization lines or similar expressions.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = 1&#xA;b = 3.14&#xA;c = &#39;statement&#39;&#xA;d = False&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;td&gt;&#xA;&lt;td&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = 1; b = 3.14 # numbers&#xA;c = &#39;statement&#39; # strings&#xA;d = False # bools&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ternary-operator&#34;&gt;Ternary Operator&lt;/h1&gt;&#xA;&lt;p&gt;Have you ever felt like some if-else cases appear to use too many lines?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Barbenheimer Review</title>
      <link>http://localhost:1313/note/barbenheimer-review/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/barbenheimer-review/</guid>
      <description>&lt;h1 id=&#34;barbenheimer&#34;&gt;Barbenheimer&lt;/h1&gt;&#xA;&lt;img src=&#34;banner.webp&#34; alt=&#34;Source: NBC News&#34;&gt;&#xA;&lt;p&gt;Last Friday, I had the pleasure of participating in the &lt;em&gt;Barbenheimer&lt;/em&gt; craze, watching Greta Gerwig&amp;rsquo;s &lt;em&gt;Barbie&lt;/em&gt; and Christopher Nolan&amp;rsquo;s &lt;em&gt;Oppenheimer&lt;/em&gt;. While I don&amp;rsquo;t visit the movie theater often, I found this double feature to be tons of fun, so I&amp;rsquo;ve decided to give my reviews of both movies in the order that I saw them.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;barbie&#34;&gt;Barbie&lt;/h2&gt;&#xA;&lt;p&gt;I went into &lt;em&gt;Barbie&lt;/em&gt; with the understanding that I was certainly not the movie&amp;rsquo;s target audience and that a lot of material wouldn&amp;rsquo;t land with me or any of the other males in the theater. To my surprise, most of the humor resonated well with the entire audience, and the messages it conveyed stuck incredibly well. Margot Robbie is obviously a fantastic choice for Barbie, and I also thought Ryan Gosling does a fantastic job as Ken. I felt his role within the plot is incredibly well developed and helped to openly talk about topics that plenty of people wouldn&amp;rsquo;t actively discuss. I won&amp;rsquo;t spoil what happens, but a good portion of the movie centers around the pressures put on women by society, and the portrayal of Ken and other male characters helps in discussing the patriarchy in a more comedic setting. Rich and realistic context aside, &lt;em&gt;Barbie&lt;/em&gt; is not afraid of being goofy and making fun of its own franchise. The movie takes full advantage of its PG-13 swear limit and roasts Mattel&amp;rsquo;s long history of discontinued Barbie dolls, adding to the sense that this is more than just a Mattel product advertisement. Overall, &lt;em&gt;Barbie&lt;/em&gt; is a phenomenal comedy, and &lt;strong&gt;I greatly recommend it&lt;/strong&gt; if you&amp;rsquo;re willing to stare at the color pink for two hours.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fourier Transform</title>
      <link>http://localhost:1313/note/fourier-transform/</link>
      <pubDate>Tue, 04 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/fourier-transform/</guid>
      <description>&lt;h1 id=&#34;fourier-transform&#34;&gt;Fourier Transform&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Fourier Transform&lt;/strong&gt; is a transformation of a time-series function which returns a respective frequency-series function, or an equivalent function who takes a frequency $f$ as an input rather than a time $t$&lt;/p&gt;&#xA;&lt;p&gt;$$\hat{f}(\xi) = \int_{-\infty}^{\infty} f(t) e^{-i2\pi\xi t} dt$$&lt;/p&gt;&#xA;&lt;p&gt;where $f(t)$ is the original function for our sound in terms of time $t$, and $\hat{f}(\xi)$ is an equivalent function in terms of frequency $\xi$. In essence, this function takes in a frequency and determines that frequency&amp;rsquo;s &lt;em&gt;intensity&lt;/em&gt; or usage in a sound across all time values $t$ in $f(t)$- hence why we&amp;rsquo;re integrating with respect to time. For example, if we have a sound and want to know if the frequency A4 = 440 Hz was used, we can compute $\hat{f}(440)$ to figure out whether or not there&amp;rsquo;s a &amp;ldquo;peak&amp;rdquo; for this frequency, (indicating that it is exists in our sound.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Amplitude</title>
      <link>http://localhost:1313/note/amplitude/</link>
      <pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/amplitude/</guid>
      <description>&lt;h1 id=&#34;amplitude&#34;&gt;Amplitude&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;strong&gt;amplitude&lt;/strong&gt; of a sound is physically defined as the amount of displacement produced by sound waves onto air particles. From the listener&amp;rsquo;s point of view, this variable represents the &amp;ldquo;volume&amp;rdquo; of the sound.&lt;/p&gt;&#xA;&lt;p&gt;$$S(t) = A\sin(\omega t + \phi)$$&lt;/p&gt;&#xA;&lt;p&gt;Given a sinusoidal function, we define $A$ to be our peak amplitude, or the highest volume that our sound reaches. That is, $\forall t \in \Reals, \space x(t) \in [-A, A] $, (for all inputs $t$, representing time in our sinusoidal function, $x(t)$ will always be between and include $-A$ and $A$).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Waveforms and Audio Basics</title>
      <link>http://localhost:1313/note/waveforms-and-audio-basics/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/waveforms-and-audio-basics/</guid>
      <description>&lt;!-- Py-Config header --&gt;&#xA;&lt;head&gt;&#xA;&lt;py-config hidden src=&#34;pyconfig.toml&#34;&gt;&#xA;[[fetch]]&#xA;files = [&#34;./audio1.py&#34;]&#xA;&lt;/py-config&gt;&#xA;&lt;/head&gt;&#xA;&lt;!-- Content --&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Understanding the mathematical logic behind sound- how certain factors effect what we hear and how we hear it- is the first step into audio signal processing. You should likely understand some basics about trigonometry and periodic functions to best understand the content. This article will run through basic vocabulary, explain how sound is processed and stored digitally, and demonstrate basic audio processing techniques in Python.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Update: Python Compatability</title>
      <link>http://localhost:1313/post/2023/06/08/update-python-compatability/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2023/06/08/update-python-compatability/</guid>
      <description>&lt;!-- Py-Config header --&gt;&#xA;&lt;head&gt;&#xA;&lt;py-config hidden src=&#34;pyconfig.toml&#34;&gt;&#xA;[[fetch]]&#xA;files = [&#34;./updatecode.py&#34;, &#34;./reunion.wav&#34;]&#xA;&lt;/py-config&gt;&#xA;&lt;/head&gt;&#xA;&lt;!-- Content --&gt;&#xA;&lt;p&gt;Hey everyone,&lt;/p&gt;&#xA;&lt;p&gt;My website now has support for Python code using &lt;a href=&#34;https://pyscript.net/&#34;&gt;PyScript&lt;/a&gt;! This means that, on top of formatting code for LaTeX formulas&amp;hellip;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    sr1, sample1 = wavread(&#39;./reunion.wav&#39;)&#xA;    sample1 = sample1[:int(len(sample1)/4)]&#xA;    figure, axs = plt.subplots(1,2)&#xA;    figure.set_size_inches(18, 8)&#xA;    figure.suptitle(&amp;quot;Chopin Op.28 No. 1 \&amp;quot;Reunion\&amp;quot;&amp;quot;)&#xA;    axs[0].plot(sample1); axs[0].set_title(&amp;quot;Waveform&amp;quot;)&#xA;    a = spectrogram(axs[1], sample1, sr1)&#xA;    display(figure, target=&amp;quot;plot&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;audio controls&gt;&#xA;&lt;source alt=&#34;Chopin&#39;s Op. 28 No. 1&#34; src=&#34;reunion.wav&#34; type=&#34;audio/wav&#34;&gt;&#xA;&lt;/audio&gt;&#xA;&lt;div id=&#34;plot&#34;&gt;&lt;/div&gt;&#xA;&lt;py-script src=&#34;updatecode.py&#34;&gt;&lt;/py-script&gt;&#xA;&lt;p&gt;&amp;hellip;my website can now show implementations of formulas and display and plot code output! I hope to start using this feature for my future &lt;strong&gt;Audio Processing&lt;/strong&gt; articles by directly implementing Python code into the page. However, if it starts to take too long to load, I might just go back to the tried and true method of uploading screenshots of graphs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Update: Comments &amp; Future Articles</title>
      <link>http://localhost:1313/post/2023/06/05/update-comments-future-articles/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2023/06/05/update-comments-future-articles/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;üí° You can read the &lt;strong&gt;bolded sections&lt;/strong&gt; of this post to get the TL;DR.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Hey everyone,&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m proud to announce that my &lt;strong&gt;blog posts now have comments!&lt;/strong&gt; You can use this section to leave feedback, continue topic discussions or suggest edits. I only ask that everyone be kind and courteous to each other, (&lt;i&gt;please don&amp;rsquo;t force me to moderate negative/toxic comments or remove commenting entirely&lt;/i&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Additionally, I&amp;rsquo;ve replaced the previous &amp;ldquo;Articles&amp;rdquo; tab with &amp;ldquo;Audio Processing&amp;rdquo; as &lt;strong&gt;I&amp;rsquo;m starting to make audio processing tutorials.&lt;/strong&gt; Articles and papers related to audio processing are scattered all over the place online, so my goal is to create one central reference for the topic. If anyone has suggestions for audio-processing related things they want to learn, (basic audio processing tools, denoising, spatial audio), let me know! These articles should hopefully come out as soon as I get python code embeds running on the website.&lt;/p&gt;</description>
    </item>
    <item>
      <title>LaTeX for Note-Taking</title>
      <link>http://localhost:1313/post/2023/06/03/latex-for-note-taking/</link>
      <pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2023/06/03/latex-for-note-taking/</guid>
      <description>&lt;h1 id=&#34;latex&#34;&gt;$\LaTeX$&lt;/h1&gt;&#xA;&lt;p&gt;LaTeX, pronounced &amp;ldquo;lah-tech&amp;rdquo; or &amp;ldquo;lay-tech&amp;rdquo;, is a typesetting system based on the TeX language. It was developed in 1985 by American computer scientist Leslie Lamport, who wrote the package due to his frequent use of shortcuts for mathematical and scientific symbols in his own writing. Since then, it has become a staple in the world of academia as one of the premier document-writing tools with numerous integrations and extensions to the LaTeX package.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Made this Website</title>
      <link>http://localhost:1313/note/how-i-made-this-website/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/note/how-i-made-this-website/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;‚ö†Ô∏è This article assumes you have a decent understanding about console commands and Git.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;I have something rather important to get off my chest:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;I don&#39;t like web dev.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;There, I said it. I&#39;ve used plenty of tools in the past, including HTML, CSS and Javascript, yet the idea of making websites never truly stuck. To me, there was always an additional layer of complication that I could never get around. However, there are plenty of tools nowadays that get around the tedium of having to type an endless amount of style and formatting code to make a nice-looking website. This article will hopefully introduce you to a number of tools I&#39;ve been using to make this website and will hopefully stop you from having to touch &lt;i&gt;javascript&lt;/i&gt; ü§Æ or do any actual web programming.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:1313/img/aboutpic.JPG&#34; alt=&#34;Picture of Evan Matthews&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;Evan Michael Matthews&lt;/strong&gt; is a masters student in computer science at the University of Illinois Urbana-Champaign. His research focuses on audio computing and AI/ML, more specifically the improvement of AI audio generation and lossless translation between sheet music and audio. He is a member of the CS Audio Lab, under thesis advising from &lt;a href=&#34;https://paris.cs.illinois.edu&#34;&gt;Paris Smaragdis&lt;/a&gt; and additional research guidance from &lt;a href=&#34;https://minjekim.com/&#34;&gt;Minje Kim&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Evan picked up interests in music when he began learning to play piano and clarinet at age 12.&#xA;In high school, he participated in the MTHS Wind Ensemble, which performed at the Illinois SuperState Concert Band Festival (2016, 2018, 2019), the Chicago Field Museum (2016), and the Illinois Music Education Conference (2019). He also took second place in the 2018 and 2019 ILMEA Composition Tracks for his solo piano works, and performed with the 2019 ILMEA All-State Band on clarinet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redirecting...</title>
      <link>http://localhost:1313/ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ssl/</guid>
      <description>&lt;meta http-equiv=&#34;refresh&#34; content=&#34;0; url=https://ematth.notion.site/ef7eac16336f4ee78a1af563f9a87789?v=6a167fa6f72e42619ba6f3f0a222475b&amp;pvs=4&#34; /&gt;</description>
    </item>
    <item>
      <title>References</title>
      <link>http://localhost:1313/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/references/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Global JOS Index&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Smith, J.O. Mathematics of the Discrete Fourier Transform (DFT)&#xA;with Audio Applications, Second Edition,&#xA;&lt;a href=&#34;http://ccrma.stanford.edu/~jos/mdft/&#34;&gt;http://ccrma.stanford.edu/~jos/mdft/&lt;/a&gt;, online book, 2007 edition,&#xA;accessed from 07/03/2023 to present date.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
